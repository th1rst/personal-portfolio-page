{
  "homeName": "ich bin Marco",
  "homeFrom": "aus Hessen, Deutschland.",
  "homeAbout1": "Leidenschaftlicher Nerd, der nutzerfokussierte",
  "homeAbout2": "und zugängliche digitale Erfahrungen kreiert.",
  "homeAbout3": "Außerdem liebe ich React. Und Hunde.",
  "homeButtonText": "Meine Projekte",
  "navProjects": "Projekte",
  "navAbout": "Über",
  "navContact": "Kontakt",
  "projectsHeading": "Projekte",
  "projectsSubheading": "(von neu nach alt)",
  "viewSource": "Source Code",
  "viewLiveVersion": "Live-Version ansehen",
  "password": "Passwort",
  "technologiesUsed": "Verwendete Technologien:",
  "more": "Mehr",
  "less": "Weniger",
  "aboutProject": "Über das Projekt",
  "arbSubheading": "Ein Cryptocurrency Arbitrage-Rechner",
  "aboutArb1": "Tatsächlich war es gar nicht geplant, dass es ein (quasi) Full Stack Projekt wird, sondern mehr ein Spaßprojekt, weil ich seit Anfang 2017 ein riesiger Crypto-Fan bin.",
  "aboutArb2": "In der anfänglichen Entwicklungsphase hatte ich die “Cors Everywhere” Browser Extension angeschaltet, weil mein lokaler NPM Server mich mit CORS-Fehlern gestresst hat. Das Problem war nur: ich hatte vergessen, dass ich die Extension an hatte und das Frontend bereits fertig. Schließlich habe ich es auf den Webserver hochgeladen und konnte den CORS-Fehlern nun nicht mehr entkommen. Also hatte ich zwei Möglichkeiten: das Projekt nicht 'veröffentlichen' und einfach nur benutzen oder die Zähne zusammen beißen und ein NodeJS+Express Backend bauen, um die API calls zu Proxy'en (für die Coinmarketcap API ist das sogar der einzige Weg, um sie benutzen zu können. Zum Glück hatte ich noch einen VPS 'herumfliegen' für den ich aktuell keine Verwendung hatte - also los ging's.",
  "aboutArb3": "Nach etwa einem Tag des Durchforstens der Dokumentationen und etlichen Videos später, stand das (kleine) Backend bereits und lief prächtig. 'Endlich!', dachte ich mir, und habe das Frontend wieder auf den Webserver hochgeladen, allerdings hat mir Firefox dann “Blocked Mixed Content”-Fehler ausgegeben, weil mein Frontend auf HTTPS und mein Backend auf HTTP läuft. Nachdem ich auf die harte Tour lernen musste, dass ich auf einer 'nackten IP' (dem VPS) kein SSL-Zertifikat installieren konnte (außer 'Self-Signed'), hatte ich dann in einer extra Subdomain und DNS/A-Einträgen die Lösung gefunden und musste auf meinem VPS nur noch Certbot seines Amtes walten lassen.",
  "aboutArb4": "Was ich allerdings noch gerne irgendwann hinzufügen würde, ist ein Feature, das das Handelsvolumen für die Coins aus den Ergebnissen prüft. Aktuell muss man das manuell machen und das ist etwas mühsam. Allerdings würde so ein Feature nur mit Frontend-Code in zu vielen API calls resultieren und das 'Free Tier'-Limit sprengen, daher kommt eventuell eine MongoDB-Lösung in Betracht, dass in X Intervallen das Handelsvolumen checkt und in einer Datenbank ablegt.",
  "aboutArb5": "Arbitunity ist sicherlich ein Projekt, was weniger auf UI fokussiert ist als meine vorherigen und mehr auf Datensortierung, -filterung und -berechnung abzielt, aber der praktische Nutzen für jeden, der gerne Crypto Trading betreibt, ist super.",
  "arbFeature1": "Auswahl aus hunderten Cryptos und 9 Plattformen",
  "arbFeature2": "Saubere UI",
  "arbFeature3": "HTTPS Proxy Server auf einem VPS",
  "arbFeature4": "Visualisierung von API Antwortzeiten",
  "arbFeature5": "Profitspanne einstellbar",
  "arbFeature6": "Single Page Application",
  "personalPortfolioPage": "Persönliche Portfolio-Seite",
  "aboutPersonalPortfolioPage1": "Gerade weil es in diesem Fall keine fancy Dinge wie User Authentication oder API Calls zu implementieren gab, versuchte ich in diesem Fall mehr Wert auf Design zu legen - auch wenn ich designtechnisch nicht mit Talent gesegnet bin. Nach einiger Zeit der Recherche stieß ich auf 'React Spring', was hervorragend, wenn auch ziemlich kompliziert ist - daher wirst du verschiedenste Animationen hier finden, wie z.B. springs, trails und transitions.",
  "aboutPersonalPortfolioPage2": "Seit meinem letzten Projekt ('Make Me Awesome') habe ich TailwindCSS ziemlich lieb gewonnen, also habe ich es hier auch wieder verwendet. Was ich an Tailwind besonders schätze, ist, dass es keine exzessiven Design-Vorgaben wie z.B. Bootstrap hat und es mehr Spielraum gibt, sich kreativ auszutoben.",
  "aboutPersonalPortfolioPage3": "Der Code der gesamten Seite ist öffentlich auf Github und für jedermann benutzbar. Sollte es irgendwelche Verbesserungsvorschläge geben, öffne einfach einen Pull Request oder kontaktiere mich per Kontaktformular.",
  "personalPortfolioFeature1": "React Hooks",
  "personalPortfolioFeature2": "Flüssige Animationen dank React-Spring",
  "personalPortfolioFeature3": "Serverloses Kontaktformular via Formspree",
  "personalPortfolioFeature4": "tsParticles Hero Component",
  "personalPortfolioFeature5": "Multilanguage Support",
  "personalPortfolioFeature6": "Dark Mode Support",
  "personalPortfolioFeature7": "Reader mit realistischer Blätteranimation",
  "personalPortfolioFeature8": "ReCaptcha Spam-Schutz",
  "mmaSubheading": "Ein persönlicher Aktivitäts- und Produktivitätstracker",
  "aboutMma1": "Vor einiger Zeit fragte mich ein Freund, ob ich nicht eine 'Produktivitätssteigerungs-Webapp' für ihn machen könnte, mit der er seine Aktivitäten und ihre jeweilige (un)produktivität tracken könnte. Zunächst klang es langweilig, aber je mehr ich darüber nachdachte, desto mehr gefiel mir der Gedanke, weil es deutlich 'interaktiver' als das war, was ich vorher gemacht hatte... und da ich sowieso eine Idee für ein neues Projekt brauchte, habe ich mich an's Werk gemacht.",
  "aboutMma2": "Realistisch gesehen wird die App niemals viele Nutzer haben, daher wäre es zu viel des Guten gewesen, zu lernen, wie man ein komplettes Backend dafür codet - stattdessen habe ich mich für Firebase Auth und Firestore als BaaS entscheiden, was, im Rückblick betrachtet, genug Lernstoff beeinhaltete. Für Firebase Auth hatte ich mich an ein Tutorial von Rwieruch gehalten, was extrem nützlich war und mich viel gelehrt hat. Auch wenn dieses Projekt signifikant mehr Zeit in Anspruch genommen hat als geplant (speziell da ich nach dem Lockdown wieder vollzeit arbeitete), war es trotzdem extrem spaßig. Und auch wenn das nicht mein erstes React-Projekt war, hat es dennoch endlich richtig 'click' gemacht, sodass es von nun an ausgereicht hat, mich durch Dokumentationen zu wühlen und ich deutlich weniger googlen musste.",
  "aboutMma3": "Außerdem gibt es eine Android",
  "aboutMma4": ", die mit Ionic Framweork Web Components gebaut wurde.",
  "mmaFeature1": "Nutzer-Authentifizierung + Account",
  "mmaFeature2": "Einstellungen (Passwortreset, Email-Änderung)",
  "mmaFeature3": "Individuelle 'Quick Activities'",
  "mmaFeature4": "Individuelles Profil- und Bannerbild",
  "mmaFeature5": "Motivierendes Zufallszitat Via API",
  "mmaFeature6": "Datenvisualisierung mittels ApexCharts",
  "mmaFeature7": "Tabellenübersicht aller Aktivitäten inkl. Filterung",
  "mmaFeature8": "'Live Activities' (Stopuhr, Zähler)",
  "mmaFeature9": "Manuelle Dateneingabe inkl. Datumsauswahl",
  "krsHeading": "Kaufmanns Rezeptsammlung",
  "krsSubheading": "Über 180 echte Familienrezepte",
  "aboutKrs1": "Unsere Familie liebt es, zu kochen. Und da ich a) oft die Rezepte meines Großvaters benutze und b) oft Koch-Webseiten aufrufe, dachte ich mir, dass ich beides kombinieren sollte.",
  "aboutKrs2": "Kaufmanns-Rezeptsammlung ist eine vollwertige Website, die die über 180 Familienrezepte, gesammelt über 50 Jahre, meines Großvaters beinhaltet - manche davon stammen sogar noch von meiner Ur-Urgroßmutter. Die dargestellten Rezepte wurden ehemals in einem 237-seitigen 'Print-On-Demand'-Buch verwendet, das auf Amazon verkauft wurde. Das komplette Buch liegt als PDF-Datei in printqualität kostenlos zum Download bereit (bitte Doppelseiten-Layout beim Ansehen wählen).",
  "krsFeature1": "Über 180 echte Familienrezepte",
  "krsFeature2": "Inklusive 237-seitigem Ebook in printqualität",
  "krsFeature3": "'Richtige' Webseite",
  "krsFeature4": "11 Rezeptkategorien",
  "krsFeature5": "Contentful Datenbank API",
  "krsFeature6": "Durchsuchbare Rezeptdatenbank",
  "krsFeature7": "Logik für X Rezepte (Datenbank erweiterbar)",
  "krsFeature8": "Custom CSS und React-Bootstrap",
  "krsFeature9": "Social Media 'Teilen'-Funtion",
  "ltSubheading": "Eine fiktive Reiseagentur in React",
  "aboutLt1": "Mein zweiter React-Versuch - eine fiktive Reiseagentur, die Daten aus dem Contentful-Backend via API holt und den Nutzer diese durchsuchen lässt. Für jede Sektion gibt es eine 'Hero'-Komponente.",
  "aboutLt2": "Die Bilder sind urheberrechtsfreie Bilder von Unsplash und spiegeln nicht unbedingt die abgebildeten Räume wider.",
  "aboutLt3": "Das Projekt wurde von einem Video von 'Coding Addict inspiriert - auch wenn ich nur das Layout übernommen habe und sonst nichts. Schlussendlich wollte ich etwas lernen und nicht bloß seinen (sicherlich deutlich eleganteren) Code kopieren.",
  "aboutLt4": "Notiz: Ich habe den Code, auch wenn ich nun deutlich mehr Know-How habe, nicht 'aufgehübscht', da ich meinen Fortschritt dokumentieren möchte - die Codequalität ist daher nicht 'up-to-date'.",
  "ltFeature1": "Durchsuchbare Räume (Filterung)",
  "ltFeature2": "Eine 'SingleRoom'-Komponente, die Props akzeptiert (erweiterbar)",
  "ltFeature3": "Realistisches Design",
  "gcSubheading": "Ein einfacher Giphy-Klon mit deren API",
  "aboutGc1": "Mein erstes React-Projekt zum Übungszweck",
  "aboutGc2": "Standardmäßig werden 'Trending' GIF's von der Giphy API geholt und in einem Flexbox-Grid dargestellt. Mit Hilfe einer Suchleiste kann der Nutzer ein Keyword eingeben und die dargestellten GIF's werden entsprechend neu gerendert. Eine sehr einfache Seite, aber sie funktioniert tadellos.",
  "aboutGc3": "Notiz: Ich habe den Code, auch wenn ich nun deutlich mehr Know-How habe, nicht 'aufgehübscht', da ich meinen Fortschritt dokumentieren möchte - die Codequalität ist daher nicht 'up-to-date'.",
  "gcFeature1": "Durchsuchbare Giphy API",
  "gcFeature2": "Responsiv durch Flexbox",
  "gcFeature3": "Modernes Design",
  "spSubheading": "Eine personifizierbare Startseite mit datenschutzfreundlichen Alternativen.",
  "aboutSp1": "Da ich die Datenschutzpraktiken von Google und anderen 'Big Tech'-Firmen höchst fragwürdig finde, machte ich eine Startseite, die Zugang zu tollen Open Source-Alternativen zu den Google-Produkten bietet, ohne danach suchen zu müssen. Einfach zur Startseite hinzufügen und das war's.",
  "aboutSp2": "Verfügbare'Widgets':",
  "spListItem1": "DuckDuckGo Suchleiste",
  "spListItem2": "Openstreetmap (Openroute) Navigation",
  "spListItem3": "WeatherWidget.io",
  "spListItem4": "Euronews WorldNews Widget",
  "spListItem5": "Invidious Suchleiste",
  "spListItem6": "DeepL-Übersetzer Link",
  "aboutSp3": "Mit Hilfe von Gridstack.js kann jedes Widget nach Belieben frei bewegt, vergrößert und verkleinert werden. Das 'Grid' kann gesperrt und werden und das komplette Layout wird im LocalStorage des Browsers gespeichert.",
  "aboutSp4": "Die Seite ist nicht 'responsive', weil ich dafür bei einer Fullsize-Startseite keine Notwendigkeit sah.",
  "aboutSp5": "Selbst im Rückblick betrachtet, finde ich immer noch, dass es ein tolles Projekt (wenn auch vereinfacht) war und es hat eine Menge Spaß gemacht. Trotz alledem - nachdem ich unzählige EventListener und OnClick-Funktionen geschrieben habe, erkannte ich schnell, wofür man eine Library wie React braucht.",
  "aboutSp6": "Notiz: Ich habe den Code, auch wenn ich nun deutlich mehr Know-How habe, nicht 'aufgehübscht', da ich meinen Fortschritt dokumentieren möchte - die Codequalität ist daher nicht 'up-to-date'.",
  "spFeature1": "Datenschutzfreundliche 'Widgets'",
  "spFeature2": "Komplett personifizierbar",
  "spFeature3": "Layout wird im LocalStorage gespeichert",
  "spFeature4": "DuckDuckGo statt Google Suche",
  "spFeature5": "OpenStreetMap statt Google Maps",
  "spFeature6": "Invidous Frontend statt Youtube",
  "jppHeading": "Joey's Pizzeria",
  "jppSubheading": "A mockup Single Page Website of a Restaurant",
  "aboutJpp1": "Mein erstes Projekt nach der 'Tutorial Hölle'.",
  "aboutJpp2": "Eine sehr simple SinglePage Website, die ausschließlich mit HTML5 und CSS3 (und etwas Bootstrap für die Slideshow) gemacht wurde, und eine fiktive Pizzeria namens 'Joey's' darstellen soll.",
  "aboutJpp3": "Notiz: Ich habe den Code, auch wenn ich nun deutlich mehr Know-How habe, nicht 'aufgehübscht', da ich meinen Fortschritt dokumentieren möchte - die Codequalität ist daher nicht 'up-to-date'.",
  "jppFeature1": "Responsive",
  "jppFeature2": "Bilder per Slideshow",
  "jppFeature3": "Detailverliebte und lustige Beschreibungen",
  "contactMe": "Kontakt",
  "message": "Nachricht",
  "nameRequired": "Der Name wird benötigt",
  "emailRequired": "Die Email wird benötigt",
  "messageRequired": "Die Nachricht wird benötigt",
  "captchaRequired": "Das ReCaptcha wird benötigt",
  "fieldRequired": "Dieses Feld wird benötigt",
  "send": "Senden",
  "goToPage": "Zu Seite",
  "of": "von",
  "successModalText": "Nachricht gesendet! Ich werde sobald wie möglich antworten.",
  "whoIamHeading": "Wer ich bin",
  "whoIamText1": "Ich liebe es, Dinge zu erschaffen. Sei es Musik, Fotos, Bücher, Game Design - aber irgendwie habe ich immer Leute beneidet, die programmieren können. Nachdem ich angefangen hatte, HTML und CSS zu lernen, hatten JavaScript und React sich schnell zu einer Leidenschaft entwickelt.",
  "whoIamText2": "Da ich mein Leben lang im Verkauf tätig bin, versuche ich stets, nicht nur Software zu entwickeln, sondern eine benutzerfreundliche und zielgerichtete digitale Erfahrung zu schaffen, die Probleme löst und das Leben der Benutzer verbessert.",
  "passions": "Interessen",
  "codingHeading": "Programmieren",
  "codingText1": "Was ich am Programmieren liebe, ist die Tatsache, dass es sich ständig weiterentwickelt.",
  "codingText2": "Da ich jemand bin, der schnell gelangweilt ist, wenn er das Gefühl hat, dass es nichts mehr zu lernen gibt, ist es großartig, dass es beim Programmieren immer eine neue Technologie, ein neues Framework oder eine neue Library zu entdecken/lernen gibt - deshalb verwende ich bei jedem Projekt, das ich anfange auch mindestens eine neue Technologie.",
  "writingHeading": "Schreiben",
  "dogsHeading": "Hunde",
  "dogsText1": "Seit ich ein Kind war, wollte ich immer einen Hund. Da meine Eltern von dieser Idee nicht angetan waren, half ich im erwachsenenalter dann ehrenamtlich in einem regionalen Tierheim aus, was mich dann vollends davon überzeugte, mir einen eigenen Vierbeiner zu holen.",
  "dogsText2": "Als ich dort meinen Hund,",
  "dogsText3": ", kennen lernte, war sofort klar, dass wir zusammen gehören.",
  "dogsText4": "Durch Hunde habe ich viel über mich selbst gelernt und nach den Erfahrungen im Tierheim und privat habe ich mein gesammeltes Wissen sogar in Buchform verpackt und angefangen, Bücher zu schreiben.",
  "dogsText5": "Um es in den Worten eines unbekannten Zitats aus dem Internet zu sagen:",
  "dogsText6": "Ohne Hund wäre mein Haus sauber, mein Portemonnaie voll, aber mein Herz wäre leer.",
  "readNow": "Lesen",
  "imprintPrivacyPolicy": "Impressum / Datenschutzerklärung",
  "acceptPrivacy": "Ich akzeptiere die",
  "privacyPolicy": "Datenschutzerklärung",
  "cookieText1": "Diese Webseite verwendet Cookies, um das bestmögliche Nutzererlebnis zu schaffen.",
  "cookieText2": "Mehr erfahren.",
  "cookieAccept": "Akzeptieren",
  "contactFormCookieText1": "Aufgrund der Google ReCaptcha validierung ist es notwendig, Cookies zu akzeptieren. Wenn du sie absichtlich nicht akzeptiert hast, kannst du das Kontaktformular leider nicht benutzen.",
  "contactFormCookieText2": "In diesem Fall, sende einfach eine Email an",
  "contactFormCookieText3": "Wenn du unabsichtlich die Gelegenheit verpasst hast, Cookies zuzustimmen, kannst du das",
  "contactFormCookieText4": "hier noch einmal tun."
}
